% LaTeX Language and campus name and format package
\documentclass[es,gi]{ifirak}

% ERABILIKO DIREN PAKETEAK %

% listings pakage is for code formating
\usepackage{listings}
% Paquete for acents and other special characters
% It is not necesary to use all this packages add or remove those you are interested on
\usepackage[utf8]{inputenc}
\usepackage{colortbl}
\usepackage[table]{xcolor}
\usepackage{graphicx}
\usepackage{wrapfig}
\usepackage{amsfonts}
\usepackage{makeidx}
% Definition of colors
\definecolor{darkgreen}{rgb}{0,0.5,0}
\definecolor{lightgray}{rgb}{0.95,0.95,0.95}
\definecolor{gray}{rgb}{0.85,0.85,0.85}
\definecolor{white}{rgb}{1,1,1}
\definecolor{purple}{rgb}{0.51,0,0.25}
\definecolor{orange}{rgb}{0.255,0.178,0.102}
%Definition of style for code
\lstdefinestyle{customc}{
	belowcaptionskip=1\baselineskip,
	breaklines=true,
	tabsize=4,
	language=C,
	showstringspaces=false,
	basicstyle=\footnotesize\ttfamily,
	keywordstyle=\bfseries\color{darkgreen},
	commentstyle=\itshape\color{purple},
	identifierstyle=\color{blue},
	stringstyle=\color{orange},
	backgroundcolor=\color{lightgray},
}
\lstset{language=C,escapechar=@,style=customc}
\DeclareMathSizes{10}{10}{10}{10}
%\lstset{language=C++,
	%	basicstyle=\scriptsize\ttfamily,
	%	keywordstyle=\color{darkgreen}\bfseries,
	%	identifierstyle=\color{black},
	%	commentstyle=\color{gray}, 
	%	stringstyle=\ttfamily,
	%	showstringspaces=false,
	%	tabsize=2,
%	\textit{K}(\textit{m}, \textit{j}) = max \{ \textit{K}(\textit{m} - \textit{m_{j}}, \textit{j} - 1) + \textit{v_{j}} , \textit{K}(\textit{m}, \textit{j} - 1) \}
	%	backgroundcolor=\color{lightgray}}
%par(pch=22, col="black", mfrow = c(2,1))


\begin{document}

% Course year
\ikasturtea{2015 - 2016}
% Subject or course name
\irakasgaia{Sistemas de Cómputo Paralelo}
% Title
\title{Puzle, Parte 1}
% Name of Author
\author{Mikel Dalmau}

\maketitle

<<setup, echo=FALSE, cache=FALSE>>=
library(knitr)
# global chunk options
opts_chunk$set(cache=TRUE, autodep=TRUE)
@

%\section{Código}

\section{Comunicaciones colectivas}


\section{Ejercicios, primera parte del puzle.}

\subsection{P1.1}
\paragraph{}
Hay que repartir un vector de N elementos entre npr procesos. Completa el programa serie \textit{P11-distribute0.c}, para que genere el tamaño de cada trozo del vector y el desplazamiento desde el origen del vector al comienzo de cada trozo, en estos dos casos: 

\begin{itemize}
\item[\textbf{a.}] los posibles restos se añaden al último trozo
\item[\textbf{b.}] los posibles restos se añaden uno a uno a diferentes trozos
\end{itemize}

\subsubsection{a.}
\paragraph{}
Inicialmente calculo Nloc y remainder.
\begin{lstlisting}
	//Compute Nloc and remainder
	Nloc = floor((double)N/(double)npr);
	remainder = N - Nloc*npr;
\end{lstlisting}
\paragraph{}
Este caso es sencillo y se resuelve con el siguiente bucle y las asignaciones finales.
\begin{lstlisting}
	//We
	for(i=0; i<npr-1; i++){
		size[i] = Nloc;
		shift[i] = i*Nloc;
	}
	//Finally we charge the last process with the remainder
	size[npr-1] = Nloc + remainder;
	shift[npr-1] = (npr-1)*Nloc;
\end{lstlisting}

\subsubsection{b.}
\paragraph{}
En este segundo caso he comenzado distribuyendo la carga del resto entre los primeros procesadores, luego,
las cargas distintas entre procesos no permiten el cálculo de shift usado anteriormente, por lo que tomo las referencias de tamaño y shift calculadas en la anterior iteración para calcular el shift, sabemos donde empezamos porque sabemos dónde termina el anterior.
\begin{lstlisting}
	//Value asignment to first process  
	size2[0] = Nloc;
	shift2[0] = 0; 
\end{lstlisting}
\pagebreak
\begin{lstlisting}
	//Distribution of the remainder among the first processes 
	i = 0;
	while(remainder){
		size2[i] += 1;
		remainder -= 1;
		i++;
	}
	
	//Distribute the rest of the vector among the processes
	for(i=1; i<npr; i++){
	  size2[i] += Nloc;
	  shift2[i] = shift2[(i-1)] + size2[(i-1)];
	}
\end{lstlisting}

\subsection{P1.2}
El programa \textit{P12-inteser.c} calcula el valor de una integral mediante el conocido método de sumar las áreas de n trapecios bajo la curva que representa una función. A mayor valor de n, más preciso el resultado.\\

Completa el programa MPI \textit{P12-inteser.c} para realizar esa misma función entre P procesos, utilizando funciones de comunicación colectiva. Compara el resultado con el de la versión serie. 


\begin{thebibliography}{arauak}
	
	\bibitem[1]{key-1} Pacheco P.:\textit{An Introduction to Parallel Programming}. Morgan Kaufmann,2011. Capítulo 3, apartado 4.
	
\end{thebibliography}


\end{document}